<?php include_once('Spreadsheet/Excel/Writer.php');include_once('Spreadsheet/Excel/Reader/reader.php');Class Leads extends Auth_Controller  { 	var $data = array();	//use `Auth_Controller` if you want the page to be validated if the user is logged in or not, if you want to disable this then use `CI_Controller` instead	public  function __construct(){		parent::__construct();		$this->load->model('leads_model');		$this->load->helper('url');		$this->load->library('session');  		$this->load->helper(array('form', 'url'));  		$this->has_permission(178);		$this->data = $this->get_privs();		/**load your own library			or add in application/config/autoload/ under libraries		**/		//$this->load->library('MY_auth_lib');	}			public function set_header_data($title='ACQUI',$sub_title=''){		$data['timestatus'] = $this->check_time_status();		$data['title'] = $title;				if(!empty($sub_title))			$data['sub_title'] = $sub_title;					$data['is_logged'] = $this->session->userdata('logged_in');		$data['privs'] = $this->data;		$this->load->view('templates/header',$data); 	}	 		public function batch_upload(){		$this->set_header_data('','Batch Upload');		$this->load->view('leads/batch_upload');		$this->load->view('templates/footer');	}		public function batch_lead_activator(){		$this->set_header_data('','Lead Activator');		$this->load->view('leads/batch_lead_activator');		$this->load->view('templates/footer');	}		public function do_batch_upload($type=1){	 		$config['upload_path'] = './uploads/database/'; 		$config['allowed_types'] = '*'; //'*' = all types are allowed		$this->load->library('upload', $config);				if(!$this->upload->do_upload()){			$data['error'] = $this->upload->display_errors();  		}				if(isset($data['error']))			echo $data['error'];		else{						if($type == 1) //batch upload in db				$return = $this->leads_model->do_batch_upload();			elseif($type == 2) //batch disable to db				$return = $this->leads_model->do_batch_disable();							//invalid file type			if($return == 2)				echo "Invalid File TYPE!";			if($return == 3)				echo "Invalid column name! <br> Follow the correct column format.";			elseif($return == 1)				echo "Success!";		}			} 		public function lead()	{  		$this->set_header_data('','Lead Allocation'); 		$data['users'] = $this->get_users();		$this->load->view('leads/leads',$data);		$this->load->view('templates/footer');	}		public function manage($userid=null)	{		$this->set_header_data('','Lead Allocation'); 				if($userid == null)			$userid = $this->session->userdata('agentID');					$this->session->set_userdata('agentID', $userid);		$data['restricted'] = $this->getLookup('restrict_tag',1);		$data['leadDetails'] = $this->get_leads_details(); //get available lead identity		$data['allocLeads'] = $this->leads_model->get_allocated_leads($userid); //get assigned leads		$data['unAllocLeads'] = $this->leads_model->get_unallocated_leads(); //get unassigned leads		$data['unAllocVirginLeads'] = $this->leads_model->get_unallocated_virgin_leads(); //get unassigned virgin leads		$data['agent'] = $this->get_user_grp_by_id($userid);        $data['leads_assigned'] = $this->leads_model->get_lead_identity_assigned($userid);		$data['userid'] = $userid;		$this->load->view('leads/manage_leads',$data);		$this->load->view('templates/footer');	}		public function allocate_leads(){		$this->leads_model->allocate_leads();		#$this->manage();	}    public function lead_iden_activator(){        $this->leads_model->lead_iden_activator();    }		public function manage_lead_identity(){		$this->set_header_data('','Manage Lead Identity'); 		$data['leadDetails'] = $this->get_leads_details(1); //get available lead identity		$this->load->view('leads/manage_lead_identity',$data);		$this->load->view('templates/footer');	}		public function li_activator(){		$this->leads_model->li_activator();	}		public function single_activator($recordID,$is_active){		echo $recordID . ' -- ' .$is_active;		$this->db->update('contact_list',array('is_active'=>$is_active),array('id'=>$recordID));	}}?>